# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Ujaval Gandhi
# This file is distributed under the same license as the QGIS Tutorials and Tips package.
# 
# Translators:
# Songhyun Choi <songhyun@gmail.com>, 2015
msgid ""
msgstr ""
"Project-Id-Version: QGIS Tutorials\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-28 07:24+0000\n"
"PO-Revision-Date: 2019-03-29 06:43+0000\n"
"Last-Translator: Ujaval Gandhi <ujaval@spatialthoughts.com>\n"
"Language-Team: Korean (http://www.transifex.com/spatialthoughts/qgis-tutorials/language/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/docs/getting_started_with_pyqgis.rst:2
msgid "Getting Started With Python Programming"
msgstr "파이썬 프로그램밍 시작"

#: ../../source/docs/getting_started_with_pyqgis.rst:5
msgid ""
"A new version of this tutorial is available at "
":doc:`3/getting_started_with_pyqgis`"
msgstr ""

#: ../../source/docs/getting_started_with_pyqgis.rst:7
msgid ""
"QGIS has a powerful programming interface that allows you to extend the core"
" functionality of the software as well as write scripts to automate your "
"tasks. QGIS supports the popular Python scripting language. Even if you are "
"a beginner, learning a little bit of Python and QGIS programming interface "
"will allow you to be much more productive in your work. This tutorial "
"assumes no prior programming knowledge and is intended to give an "
"introduction to python scripting in QGIS (PyQGIS)."
msgstr "QGIS는 강력한 프로그래밍 인터페이스를 가지고 있는데 이것으로 소프트웨어의 핵심 기능을 확장할 수 있고 작업을 자동화하는 스크립트를 만들어 낼 수 있습니다. QGIS는 요즘 인기있는 파이썬 스크립팅 언어를 지원합니다. 초보자라할 지라도 조금만 파이썬과 QGIS 프로그래밍 인터페이스를 배우면 작업이 매우 생산적이 될 것입니다. 이 예제에서는 사전에 프로그램에 대한 지식이 없다고 가정하고 QGIS (PyQGIS)엣 파이썬을 소개하고자 합니다. "

#: ../../source/docs/getting_started_with_pyqgis.rst:17
msgid "Overview of the task"
msgstr "과업 개요"

#: ../../source/docs/getting_started_with_pyqgis.rst:19
msgid ""
"We will load a vector point layer representing all major airports and use "
"python scripting to create a text file with the airport name, airport code, "
"latitude and longitude for each of the airport in the layer."
msgstr "예제에서는 모든 주요 공항을 표현하는 벡터 점 레이어를 불러와서 파이썬 스크립팅으로 레이어에서 공항의 이름, 공항코드, 각 공항의 위도와 경도를 텍스트파일로 만들 것입니다. "

#: ../../source/docs/getting_started_with_pyqgis.rst:24
msgid "Get the data"
msgstr "데이터 획득"

#: ../../source/docs/getting_started_with_pyqgis.rst:26
msgid ""
"We will use the `Airports <http://www.naturalearthdata.com/downloads/10m-"
"cultural-vectors/airports/>`_ dataset from Natural Earth."
msgstr "Natural Earth의 `Airports <http://www.naturalearthdata.com/downloads/10m-cultural-vectors/airports/>`_ 데이터셋을 사용합니다. "

#: ../../source/docs/getting_started_with_pyqgis.rst:30
msgid ""
"Download the `Airports shapefile "
"<http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_airports.zip>`_."
msgstr "`Airports shapefile <http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_airports.zip>`_를 다운로드 하십시오."

#: ../../source/docs/getting_started_with_pyqgis.rst:33
msgid "Data Source [NATURALEARTH]_"
msgstr "데이터 출처: [NATURALEARTH]_"

#: ../../source/docs/getting_started_with_pyqgis.rst:36
msgid "Procedure"
msgstr "과정"

#: ../../source/docs/getting_started_with_pyqgis.rst:38
msgid ""
"In QGIS, go to :menuselection:`Layers --> Add Vector Layer`. Browse to the "
"downloaded ``ne_10m_airports.zip`` file and click :guilabel:`Open`. Select "
"the ``ne_10m_airports.shp`` layer and click :guilabel:`OK`."
msgstr "QGIS에서 메뉴 레이어 --> 레이어 추가 --> 벡터 레이어 추가  :menuselection:`Layers --> Add Vector Layer`로 가십시오. 다운로드한 ``ne_10m_airports.zip``파일을 찾고 열기 :guilabel:`Open`를 누릅니다. ``ne_10m_airports.shp``레이어를 선택하고 확인 :guilabel:`OK`을 누릅니다. "

#: ../../source/docs/getting_started_with_pyqgis.rst:45
msgid "You will see the ``ne_10m_airports`` layer loaded in QGIS."
msgstr "QGIS에 ``ne_10m_airports``레이어가 불러들여질 것입니다. "

#: ../../source/docs/getting_started_with_pyqgis.rst:50
msgid ""
"Select the :guilabel:`Identify` tool and click on any of the points to "
"examine the available attributes. You will see that the name of the airport "
"and it's 3 digit code are contained in the attributes ``name`` and "
"``iata_code`` respectively."
msgstr "객체 확인 :guilabel:`Identify` 툴을 선택하고 사용가능한 속성을 확인하기 위해 아무 점이나 누릅니다. 공항이름과 공항의 3자리수 코드가 속성의 ``name``과 ``iata_code``로 각각 포함되어 있는 것을 보게됩니다. "

#: ../../source/docs/getting_started_with_pyqgis.rst:58
msgid ""
"QGIS provides a built-in console where you can type python commands and get "
"the result. This console is a great way to learn scripting and also to do "
"quick data processing. Open the :guilabel:`Python Console` by going to "
":menuselection:`Plugins --> Python Console`."
msgstr "QGIS는 파이썬 명령어를 입력할 수 있고 결과를 얻을 수 있는 콘솔을 기본적으로 제공합니다. 이 콘솔은 스크립팅을 배울 수 있는 가장 좋은 방법이고 또한 데이터를 빠르게 처리할 수 있습니다. 메뉴 플러그인 --> Python 콘솔  :menuselection:`Plugins --> Python Console`로 가서 Python 콘솔 :guilabel:`Python Console`을 엽니다. "

#: ../../source/docs/getting_started_with_pyqgis.rst:66
msgid ""
"You will see a new panel open at the bottom of QGIS canvas. You will see a "
"prompt like ``>>>`` at the bottom where you can type commands. For "
"interacting with the QGIS environment, we must use the ``iface`` variable. "
"To access the currently active layer in QGIS, you can type the following and"
" press :kbd:`Enter`. This command fetches the reference to the currently "
"loaded layer and stores it in the ``layer`` variable."
msgstr "QGIS 캔버스 아랫쪽에 새로운 패널이 열리는 것이 보일 것입니다. 명령어를 입력할 수 있는 아랫쪽에 ``>>>``과 같은 프롬프터를 보게될 것입니다. QGIS환경의 인터페이스에서 ``iface`` 변수를 사용해야만 합니다. QGIS에서 현재 활성화된 레이어에 접근하기 위해서 다음과 같이 타이핑하고 엔터 :kbd:`Enter`를 누릅니다. 이 명령어는 레퍼런스를 현재 활성화된 레이어로 가져오고 ``layer`` 변수에 저장합니다. "

#: ../../source/docs/getting_started_with_pyqgis.rst:80
msgid ""
"There is a handy function called ``dir()`` in python that shows you all "
"available methods for any object. This is useful when you are not sure what "
"functions are available for the object. Run the following command to see "
"what operations we can do on the ``layer`` variable."
msgstr "파이썬에는 ``dir()``라고 하는 편리한 기능이 있는데 어떤 객체에 대한 모든 가용한 방법을 보여줍니다. 이것은 어떤 함수가 객체에 사용가능한 지 확실하지 않을 때 유용합니다. ``layer``변수에 대해 어떤 것을 할 수 있는지 알아보기위해 다음의 명령어를 실행합니다. "

#: ../../source/docs/getting_started_with_pyqgis.rst:92
msgid ""
"You will see a long list of available functions. For now, we will use a "
"function called ``getFeatures()`` which will gets you the reference to all "
"features of a layer. In our case, each feature will be a point representing "
"an airport. You can type the following command to iterate through each of "
"the features in the current layer. Make sure to add 2 spaces before typing "
"the second line."
msgstr "긴 목록의 사용가능한 함수를 보게될 것입니다. 이제 레이어의 모든 객체의 레퍼런스를 보여주는 ``getFeatures()``라는 함수를 사용할 것입니다. 이 경우 각 객체는 공항을 나타내는 점이 될 것입니다. 현재의 레이어에서 각 객체를 통해 반복하는 다음의 명령을 입력할 수 있습니다. 두번째 줄에 입력을 하기 전에 두칸의 스페이스를 추가하는 것을 잊지마십시오."

#: ../../source/docs/getting_started_with_pyqgis.rst:107
msgid ""
"As you will see in the output, each line contains a reference to a feature "
"within the layer. The reference to the feature is stored in the ``f`` "
"variable. We can use the ``f`` variable to access the attributes of each "
"feature. Type the following to print the ``name`` and ``iata_code`` for each"
" airport feature."
msgstr "결과에서 보게되는 것 처럼 각 입력줄은 레이어 내의 객체의 레퍼런스를 포함하고 있습니다. 객체의 레퍼런스는 ``f``변수에 저장됩니다. 각 객체의 속성에 접근하기 위해 ``f``변수를 사용할 수 있습니다. 각 공항 객체에 대한 ``name``과 ``iata_code``를 출력하기 위해 다음과 같이 입력합니다. "

#: ../../source/docs/getting_started_with_pyqgis.rst:121
msgid ""
"So now you know how to programatically access the attribute of each feature "
"in a layer. Now, let's see how we can access the coordinates of the feature."
" The coordinates of a vector feature can be accessed by calling the "
"``geometry()`` function. This function returns a geometry object that we can"
" store in the variable ``geom``. You can run ``asPoint()`` function on the "
"geometry object to get the x and y coordinates of the point. If your feature"
" is a line or a polygon, you can use ``asPolyline()`` or ``asPolygon()`` "
"functions. Type the following code at the prompt and press :kbd:`Enter` to "
"see the x and y coordinates of each feature."
msgstr "그러면 이제 레이어에서 각 객체의 속성에 어떻게 체계적으로 접근하는 지 알게됩니다. 이제 객체의 좌표에 어떻게 접근할 수 있는지 알아보겠습니다. 벡터 객체의 좌표는 ``geometry()``함수를 불러서 접근할 수 있습니다. 이 함수는 지오메트리 객체를 되돌리는데  ``geom``변수에 저장할 수 있습니다. 점의 x, y좌표를 얻기 위해 지오메트리 객체에 대해 ``asPoint()``함수를 실행할 수 있습니다. 만약 객체가 선 혹은 폴리곤이면 ``asPolyline()`` 혹은 ``asPolygon()`` 함수를 사용할 수 있습니다. 각 객체의 x, y좌표를 보기 위해 프롬프트에 다음의 코드를 입력하고 엔터 :kbd:`Enter`를 누릅니다. "

#: ../../source/docs/getting_started_with_pyqgis.rst:140
msgid ""
"What if we wanted to get only the ``x`` cordinate of the feature? You can "
"call the ``x()`` function on the point object and get its x coordinate."
msgstr "객체의 ``x`` 좌표만 얻고자 한다면 어떨까요? 점 객체에 대해 ``x()``함수를 불러 x좌표을 얻을 수 있습니다. "

#: ../../source/docs/getting_started_with_pyqgis.rst:152
msgid ""
"Now we have all the pieces that we can stitch together to generate our "
"desired output. Type the following code to print the name, iata_code, "
"latitude and longitude of each of the airport features. The ``%s`` and "
"``%f`` notations are ways to format a string and number variables."
msgstr "이제 원하는 결과를 만들어 내기 위해 함께 조합을 할 수 있는 모든 명령어 조각을 확보했습니다. 각 공항 객체의 이름, 공항코드, 위도 그리고 경도를 출력하려면 다음의 코드를 입력하십시오.  ``%s``와 ``%f``표시는 문자와 숫자변수를 포맷하는 방법입니다.  "

#: ../../source/docs/getting_started_with_pyqgis.rst:167
msgid ""
"You can see the output printed on the console. A more useful way to store "
"the output would be in a file. You can type the following code to create a "
"file and write the output there. Replace the file path with a path on your "
"own system. Note that we add ``\\n`` at the end of our line formatting. This"
" is to add a newline after we add the data for each feature. You should also"
" note the ``unicode_line = line.encode('utf-8')`` line. Since our layer "
"contains some features with unicode characters, we can't simply write it to "
"a text file. We encode the text using the UTF-8 encoding and then write to "
"the text file."
msgstr "콘솔에 출력된 결과를 볼 수 있을 것입니다. 결과를 저장하는 보다 유용한 방법은 파일에 담는 것입니다. 파일을 만들고 그 파일에 결과를 쓰기 위해서 다음과 같은 코드를 입력하십시오. 각자의 시스템 경로에 맞게 파일 경로를 교체하십시오. 줄을 만들기 위해 끝에 ``\\n``을 추가하는 것에 유의하십시오. 이것은 각 객체에 대해 데이터를 추가한 후에 새로운 줄을 추가합니다. 또한 ``unicode_line = line.encode('utf-8')`` 줄에 유의하십시오. 레이어가 유니코드를 가진 객체를 포함하고 있으므로 단순하게 텍스트 파일에 그것을 기록할 수 없습니다. UTF-8 엔코딩을 사용해서 텍스트를 부호화한 다음 텍스트파일에 기록합니다."

#: ../../source/docs/getting_started_with_pyqgis.rst:191
msgid ""
"You can go to the output file location you specified and open the text file."
" You will see the data from the airports shapefile that we extracted using "
"python scripting."
msgstr "명시한 위치의 결과 파일로 가서 텍스트 파일을 열 수 있습니다. 파이썬 스크립팅을 이용해서 공항 shapefile에서 추출한 데이터를 볼 수 있을 것입니다. "
