# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Ujaval Gandhi
# This file is distributed under the same license as the QGIS Tutorials and Tips package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# rosa ahn <rosately54@gmail.com>, 2019
# 신해선 <haeseonplant@gmail.com>, 2019
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Tutorials and Tips v1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-28 07:24+0000\n"
"PO-Revision-Date: 2019-02-20 19:19+0000\n"
"Last-Translator: 신해선 <haeseonplant@gmail.com>, 2019\n"
"Language-Team: Korean (https://www.transifex.com/spatialthoughts/teams/7952/ko/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/docs/3/processing_graphical_modeler.rst:2
msgid "Automating Complex Workflows using Processing Modeler (QGIS3)"
msgstr "프로세싱 모델러를 사용하여 복잡한 작업흐름 자동화하기(QGIS3)"

#: ../../source/docs/3/processing_graphical_modeler.rst:4
msgid ""
"GIS Workflows typically involve many steps - with each step generating "
"intermediate output that is used by the next step. If you change the input "
"data or want to tweak a parameter, you will need to run through the entire "
"process again manually.  Fortunately, QGIS has a graphical modeler built-in "
"that can help you define your workflow and run it with a single invocation. "
"You can also run these workflows as a batch over a large number of inputs."
msgstr ""
"GIS 작업흐름도는 전형적으로 많은 단계를 포함합니다. 각 단계는 중간 결과물을 만들어 내고 이것은 다음 단계에 사용됩니다. 만약 입력 "
"데이터가 바뀌거나 매개변수를 바꾸고 싶다면 전체 처리 과정을 일일히 다시 분석해야 할 필요가 있습니다. 다행이도, QGIS는 시각적 "
"모델러가 기본적으로 포함되어 있어 작업흐름도를 정의할 수 있고 한번에 구동시킬 수 있습니다. 대량의 입력 데이터도 일괄처리로써 "
"작업흐름도를 구동시킬수도 있습니다."

#: ../../source/docs/3/processing_graphical_modeler.rst:8
msgid "Overview of the task"
msgstr "작업 개요"

#: ../../source/docs/3/processing_graphical_modeler.rst:10
msgid ""
"We will take a point layer of maritime piracy incidents and create a "
"processing model to produce a density map by aggregating them over a global "
"hexagonal grid."
msgstr ""
"해상 해적행위 사건의 포인트 레이어를 취해서 전세계 육각 그리드에 걸쳐 집계하여 밀도 지도를 제작하는 처리 모델을 만들겠습니다."

#: ../../source/docs/3/processing_graphical_modeler.rst:13
msgid "Other skills you will learn"
msgstr "이 예제에서 필요한 다른 기술"

#: ../../source/docs/3/processing_graphical_modeler.rst:15
msgid "Using a global equal area projection and setting the Project CRS."
msgstr "전지구 동일 면적 투영 및 프로젝트 CRS 설정"

#: ../../source/docs/3/processing_graphical_modeler.rst:16
msgid "Applying a Graduated symbology to a polygon layer."
msgstr "폴리곤 레이어에 점진적 심볼로지 적용"

#: ../../source/docs/3/processing_graphical_modeler.rst:19
msgid "Get the data"
msgstr "데이터 획득"

#: ../../source/docs/3/processing_graphical_modeler.rst:20
msgid ""
"National Geospatial-Intelligence Agency's `Maritime Safety Information "
"portal <https://msi.nga.mil/NGAPortal/MSI.portal>`_ provides a shapefile of "
"all incidencts of maritine piracy in the form on `Anti-shipping Activity "
"Messages <https://msi.nga.mil/Piracy>`_. Download the `Arc Shape file "
"<https://msi.nga.mil/api/publications/download?key=16920958/SFH00000/ASAM_shp.zip&type=download>`_"
" version of the database."
msgstr ""
"국립지질정보국의 '해양안전정보 포털<https://msi.nga.mil/NGAPortal/MSI.portal>`_은 해적 행위 방지 "
"메시지<https://msi.nga.mil/Piracy>`_.에 있는 형태로 모든 해양 해적 행위를 형상화한 파일을 제공합니다. "
"데이터베이스의 'Arc Shape "
"파일<https://msi.nga.mil/api/publications/download?key=16920958/SFH00000/ASAM_shp.zip&type=download>`_"
" 버전을 다운로드하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:22
msgid ""
"`Natural Earth <http://naturalearthdata.com>`_ has several global vector "
"layers. Download the `10m Physical Vectors - Land "
"<https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/physical/ne_10m_land.zip>`_"
" containing Land polygons."
msgstr ""
"`자연 지구 <http://naturalearthdata.com>`_에는 여러 글로벌 벡터 레이어가 있습니다. 랜드 폴리곤이 포함 "
"된`10m 물리 벡터-랜드 "
"<https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/physical/ne_10m_land.zip>`__를"
" 다운로드하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:25
msgid ""
"For convenience, you may directly download a copy of the above layers from "
"below:"
msgstr "편의상 위의 레이어 사본을 아래에서 직접 다운로드 할 수 있습니다."

#: ../../source/docs/3/processing_graphical_modeler.rst:27
msgid "`ASAM_shp.zip <http://www.qgistutorials.com/downloads/ASAM_shp.zip>`_"
msgstr "`ASAM_shp.zip <http://www.qgistutorials.com/downloads/ASAM_shp.zip>`_"

#: ../../source/docs/3/processing_graphical_modeler.rst:29
msgid ""
"`ne_10m_land.zip <http://www.qgistutorials.com/downloads/ne_10m_land.zip>`_"
msgstr ""
"`ne_10m_land.zip <http://www.qgistutorials.com/downloads/ne_10m_land.zip>`_"

#: ../../source/docs/3/processing_graphical_modeler.rst:31
msgid "Data Source: [NGA_MSI]_ [NATURALEARTH]_"
msgstr "데이터 출처: [NGA_MSI]_ [NATURALEARTH]_"

#: ../../source/docs/3/processing_graphical_modeler.rst:34
msgid "Procedure"
msgstr "과정"

#: ../../source/docs/3/processing_graphical_modeler.rst:36
msgid ""
"In the QGIS Browser Panel, locate the directory where you saved your "
"downloaded data. Expand the ``ne_10m_land.zip`` and select the "
"``ne_10m_land.shp`` layer. Drag the layer to the canvas. Next, locate the "
"``ASAM_shp.zip`` file. Expand it and select the "
"``asam_data_download/ASAM_events.shp`` layer and drag it on to the canvas."
msgstr ""
"QGIS 브라우저 패널에서 다운로드한 데이터를 저장한 디렉터리를 찾으십시오. ``ne_10m_land.zip\"을 확장하고 "
"``ne_10m_land\"를 선택하십시오.\"shp\" 층 레이어를 캔버스로 끌어다 놓으십시오. 그런 다음 "
"\"ASAM_shp.zip\" 파일을 찾으십시오. 그것을 확장하고 "
"\"asam_data_download/ASAM_events.shp\"레이어를 선택하고 캔버스로 드래그하십시오..\" "

#: ../../source/docs/3/processing_graphical_modeler.rst:41
msgid ""
"The ``ASAM_events.shp`` layer does not have projection information "
"associated with it, so you will be prompted to select a CRS in the "
":guilabel:`Coordinate Reference System Selector`. Here, the points are in "
"the Latitude and Longitude coordinates, so select the ``WGS 84`` CRS and "
"click :guilabel:`OK`."
msgstr ""
"``ASAM_events.shp ''레이어에는 이와 관련된 투영 정보가 없으므로 `Coordinate Reference System "
"Selector`에서 CRS를 선택하라는 메시지가 표시됩니다. 여기에서 점은 위도 및 경도 좌표에 있으므로``WGS 84 ''CRS를 "
"선택하고 `OK`를 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:46
msgid ""
"Once the layer is loaded, you can see the individual points representing "
"incidents of piracy locations. Let's start building our Processing model to "
"process these layers. Go to :menuselection:`Processing --> Graphical "
"Modeler...`."
msgstr ""
"레이어가 로드되면 불법 복제 위치의 사건을 나타내는 개별 지점을 볼 수 있습니다. 이러한 레이어를 처리하기 위해 처리 모델 구축을 "
"시작하겠습니다. `Processing-> Graphical Modeler ...`로 이동하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:51
msgid ""
"In the :guilabel:`Processing Modeler` dialog, locate the :guilabel:`Model "
"Properties` panel. Enter ``piracy hexbin`` as the :guilabel:`Name` of the "
"model and ``projects`` as the :guilabel:`Groups`. Click the :guilabel:`Save`"
" button."
msgstr ""
"`Processing Modeler` 대화 상자에서, `모델 속성` 패널을 찾으십시오. :`Name`으로``piracy hexbin''을"
" 입력하고 `Groups``로 ``projects ''를 입력하십시오. `Save` 버튼을 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:56
msgid "Save the model as ``piracy_hexbin``."
msgstr "모델을``piracy_hexbin ''으로 저장하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:61
msgid ""
"Now we can start building a graphical model of our processing pipeline.  The"
" :guilabel:`Processing modeler` dialog contains a left-hand panel and a main"
" canvas. On he left-hand panel, locate the :guilabel:`Inputs` panel listing "
"various types of input data types. Scroll down and select the :guilabel:`+ "
"Vector Layer` input. Drag it to the canvas."
msgstr ""
"이제 처리 파이프 라인의 그래픽 모델 구축을 시작할 수 있습니다. `Processing modeler` 대화창에는 왼쪽 패널과 메인 "
"캔버스가 있습니다. 왼쪽 패널에서 다양한 유형의 입력 데이터 유형을 나열하는 `Inputs` 패널을 찾으십시오. 아래로 스크롤하여 `+ "
"Vector Layer` 입력을 선택하십시오. 캔버스로 드래그하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:66
msgid ""
"Enter ``Input Points`` as the :guilabel:`Parameter name` and ``Point`` as "
"the :guilabel:`Geometry type`. This input represents the piracy incidents "
"point layer."
msgstr ""
"`Parameter name`으로``Input Points ''를 입력하고 `Geometry type`으로``Point ''를 "
"입력하십시오. 이 입력은 불법 사건 지점 계층을 나타냅니다."

#: ../../source/docs/3/processing_graphical_modeler.rst:71
msgid ""
"Next, drag another :guilabel:`+ Vector Layer` input to the canvas. Enter "
"``Base Layer`` as the :guilabel:`Parameter name` and ``Polygon`` as the "
":guilabel:`Geometry type`. This input represents the natural earth global "
"land layer."
msgstr ""
"다음으로 다른 `+ Vector Layer` 입력을 캔버스로 드래그하십시오. `Parameter name`으로``Base Layer "
"''를 입력하고 `Geometry type`으로``Polygon ''을 입력하십시오. 이 입력은 natural earth global "
"land layer을 나타냅니다."

#: ../../source/docs/3/processing_graphical_modeler.rst:76
msgid ""
"As we are generating a global hexagonal grid, we can ask the user to supply "
"us the grid size as an input instead of hard-coding it as part of our model."
" This way, the user can quickly experiment with different grid sizes without"
" changing the model at all. select a :guilabel:`+ Number` input and drag it "
"to the canvas. Enter ``Grid Size`` as the :guilabel:`Parameter name` and "
"click :guilabel:`OK`."
msgstr ""
"우리는 글로벌 육각그리드를 생성하고 있기 때문에, 사용자에게 격자 크기를 모델의 일부로 하드 코딩하는 대신 입력으로 제공하도록 요청할 수"
" 있습니다. 이러한 방식으로 사용자는 모델을 전혀 변경하지 않고도 다양한 그리드 크기를 빠르게 실험 할 수 있습니다. `+ Number`"
" 입력을 선택하고 캔버스로 드래그하십시오. `Parameter name`으로``Grid Size ''를 입력하고 `OK`를 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:81
msgid ""
"Now that we have our user inputs defined, we are ready to add processing "
"steps. All of the processing algorithms are available to you under the "
":guilabel:`Algorithms` tab. The first step in our pipeline will be to "
"reproject the base layer to the Project CRS.  Search for ``Reproject layer``"
" algorithm and drag it to the canvas."
msgstr ""
"이제 사용자 입력이 정의되었으므로 처리 단계를 추가 할 준비가되었습니다. 모든 처리 알고리즘은 `Algorithms` 탭에서 사용할 수 "
"있습니다. 파이프 라인의 첫 번째 단계는 기본 계층을 Project CRS에 다시 투영하는 것입니다. ``Reproject layer "
"''알고리즘을 검색하여 캔버스로 드래그하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:83
msgid ""
"The necessity of this reprojection step will become clear shortly. The grid "
"generation algorithm requires us to specify the extent of the grid in the "
"unit of the Project CRS. We can supply this reprojected layer to compute "
"this extent."
msgstr ""
"이 재투영 단계의 필요성은 곧 분명해질 것입니다. 그리드 생성 알고리즘을 사용하려면 Project CRS 단위로 그리드의 범위를 "
"지정해야합니다. 이 재계산 된 레이어를 제공하여이 범위를 계산할 수 있습니다."

#: ../../source/docs/3/processing_graphical_modeler.rst:88
msgid ""
"In the :guilabel:`Reproject layer` dialog, select ``Base Layer`` as the "
":guilabel:`Input layer`. Check the :guilabel:`Use project CRS` as the "
":guilabel:`Target CRS`. Click :guilabel:`OK`."
msgstr ""
"`Reproject layer` 대화 상자에서 `Input layer`로``Base Layer ''를 선택하십시오. `프로젝트 CRS "
"사용`을 `Target CRS`로 확인하십시오. `OK`를 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:93
msgid ""
"In the :guilabel:`Processing Modeler` canvas, you will notice a connection "
"appear between the :guilabel:`+ Base Layer` input and the "
":guilabel:`Reproject layer` algorithm. This connection indicates the flow of"
" our processing pipeline. Next step is to create a hexagonal grid. Search "
"for the ``Create grid`` algorithm and drag it to the canvas."
msgstr ""
"`Processing Modeler` 캔버스에서 `+ Base Layer` 입력과 `Reproject layer` 알고리즘 사이에 연결이"
" 나타납니다. 이 연결은 처리 파이프 라인의 흐름을 나타냅니다. 다음 단계는 육각형 격자를 만드는 것입니다. ``Create grid "
"''알고리즘을 검색하여 캔버스로 드래그하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:98
msgid ""
"In the :guilabel:`Generate grid` dialog, choose ``Hexagon (polygon)`` as the"
" :guilabel:`Grid type`. Select ``Extent of 'Reprojected' from algorithm "
"'Reproject Layer'`` as the :guilabel:`Grid extent`. Click the "
":guilabel:`123` button under the :guilabel:`Horizonal spacing` label and "
"choose :guilabel:`Model input`."
msgstr ""
"`Generate grid` 대화 상자에서 `Grid type`으로``Hexagon (polygon)``을 선택하십시오. `Grid "
"extent`로 'Reproject Layer'알고리즘에서 'Reprojected'범위 '를 선택하십시오. `Horizonal "
"spacing` 레이블 아래 `123` 버튼을 클릭하고 `Model input`을 선택하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:103
msgid ""
"Select ``Grid Size`` input for :guilabel:`Using model input`. Repeat the "
"same process for :guilabel:`Vertical Spacing`. Click :guilabel:`OK`."
msgstr ""
"`모델 입력 사용`에 대해``격자 크기 ''입력을 선택하십시오. `Vertical Spacing`에 대해 동일한 프로세스를 반복하십시오."
" `OK`를 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:108
msgid ""
"At this point, we have a global hexagonal grid. The grid spans the full "
"extent of the base layer, including land areas and places where there are no"
" points. Let's filter out those grid polygons where there are no input "
"points. Search for ``Extract by location`` algorithm and drag it to the "
"canvas."
msgstr ""
"이 시점에서, 우리는 글로벌 육각형 그리드를가집니다. 그리드는 토지 영역과 점이없는 장소를 포함하여 기본 레이어의 전체 범위에 걸쳐 "
"있습니다. 입력 포인트가없는 그리드 폴리곤을 필터링 해 봅시다. ``위치로 추출''알고리즘을 검색하여 캔버스로 끕니다."

#: ../../source/docs/3/processing_graphical_modeler.rst:113
msgid ""
"For :guilabel:`Extract features from`, select ``'Grid' from algorithm "
"'Generate Grid'``, :guilabel:`Where the features (geometric predicate)` as "
"``Intersect`` and :guilabel:`By compating to the features from` as ``Input "
"points``. Click :guilabel:`OK`."
msgstr ""
"'Extract features from'창을 누른 후  'Generate Grid' 알고리즘에서 'Grid'를 선택하십시오. "
"'Where the features (geometric)창에서는 'intersect'를 선택하고, 'By compating to the "
"features from'에서는 ``Input points'를 선택한 후`확인`을 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:118
msgid ""
"Now we have only those grid polygons that contain some input points. To "
"aggregate these points, we will use ``Count points in polygon`` algorithm. "
"Search and drag it to the canvas."
msgstr ""
"이제 입력 포인트가 포함된 그리드 다각형만 있습니다. 이러한 점을 집계하기 위해 ``다각형의 카운트 점 ''알고리즘을 사용합니다. "
"검색하여 캔버스로 드래그하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:123
msgid ""
"Select ``'Extracted (location)' from algorithm 'Extract by location'`` as "
"the value for :guilabel:`Polygons`. The :guilabel:`Points` layer would be "
"``Input Points``. At the bottom, name the :guilabel:`Count` output layer as "
"``Aggregated``. Click :guilabel:`OK`."
msgstr ""
"`Polygons`의 값으로 'Extract by location'알고리즘에서 'Extracted (location)'을 선택하십시오. "
"`Points` 레이어는``Input Points ''입니다. 맨 아래에서 `Count` 출력 레이어의 이름을``Aggregated "
"''로 지정하십시오. `OK`를 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:128
msgid "The model is now complete. Click the :guilabel:`Save` button."
msgstr "이제 모델이 완성되었습니다. `Save` 버튼을 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:133
msgid ""
"Switch to the main QGIS window. You can find your newly created model in the"
" :guilabel:`Processing Toolbox` under :menuselection:`Models --> projects "
"--> piracy_hexbin`. Now it is time to run and test the model. As our goal is"
" to aggregate the input points over hexagonal grids, it is important that "
"the grids are generated using a equal-area projection. This will ensure that"
" regardless of the location of the grid, it will cover exactly the same "
"area. Our model doesn't explicitely ask for a CRS, but uses whatever CRS is "
"set as the **Project CRS**. Let's choose a global equal area projection as "
"the Project CRS. Go to :menuselection:`Project --> Properties`."
msgstr ""
"메인 QGIS 창으로 전환하십시오. 새로 작성된 모델은 `Processing Toolbox`의 `Models-> projects-> "
"piracy_hexbin에 있습니다. 이제 모델을 실행하고 테스트 할 차례입니다. 우리의 목표는 육각형 그리드를 통해 입력 포인트를 "
"집계하는 것이므로 그리드를 등 면적 투영법을 사용하여 생성하는 것이 중요합니다. 이렇게 하면 그리드의 위치에 관계없이 정확히 같은 영역을"
" 덮을 수 있습니다. 이 모델은 명시 적으로 CRS를 요구하지 않지만 ** 프로젝트 CRS **로 설정된 CRS를 사용합니다. 프로젝트 "
"CRS로 글로벌 등가 투영법을 선택합시다. `Project --> 속성`로 이동하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:138
msgid ""
"In the :guilabel:`Project Properties` dialog, switch to the :guilabel:`CRS` "
"tab. We will use a global **Mollweide** projection for this exercise which "
"is a equal area projection. Search for ``Mollweide`` in the "
":guilabel:`Filter` box and select ``World_Mollweide EPSG:54009`` as the CRS."
" Click :guilabel:`OK`."
msgstr ""
"`프로젝트 속성` 대화 상자에서 `CRS` 탭으로 전환하십시오. 이 연습에서는 등분 투영법 인 글로벌 ** 몰 바이드 ** 투영법을 "
"사용합니다. `Filter '상자에서``Mollweide' '를 검색하고 CRS로``World_Mollweide EPSG : 54009'"
" '를 선택하십시오. `OK`를 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:143
msgid ""
"You will see the layers getting reprojected on-the-fly to the selected CRS. "
"Locate the ``piracy_hexbin`` model in the :guilabel:`Processing Toolbox` and"
" double-click it."
msgstr ""
"선택한 CRS에 레이어가 즉석에서 재투영되는 것을 볼 수 있습니다. `Processing Toolbox`에서``piracy_hexbin "
"''모델을 찾아 두 번 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:148
msgid ""
"Our :guilabel:`Base Layer` is the ``ne_10m_land`` and the :guilabel:`Input "
"Points` layer is ``ASAM_events``. The :guilabel:`Grid Size` needs to be "
"specified in the units of the selected CRS. The World_Mollweide CRS unit is "
"meters, so we specify ``100000`` m (100 Kms) as the :guilabel:`Grid Size`. "
"Click :guilabel:`Run` to start the processing pipeline. Once the process "
"finishes, click :guilabel:`Close`."
msgstr ""
"우리의 `Base Layer '는``ne_10m_land' '이고 `Input Points` 레이어는``ASAM_events' '입니다."
" 선택한 CRS 단위로 `Grid Size '를 지정해야합니다. World_Mollweide CRS 단위는 미터이므로``100000 "
"''m (100 Kms)을 `Grid Size '로 지정합니다. 처리 파이프 라인을 시작하려면 `Run`을 클릭하십시오. 프로세스가 "
"완료되면 `Close`를 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:153
msgid ""
"You will see a new layer ``Aggregated`` loaded as the result of the model. "
"As you explore, you will notice the layer contains an attribute called "
"*NUMPOINTS* containing the number of piracy incidents points contained "
"within that grid feature. Let's style this layer to display this information"
" better. Right-click the ``Aggregated`` layer and select "
":guilabel:`Properties`."
msgstr ""
"모델 결과로``Aggregated ''라는 새 레이어가로드 된 것을 볼 수 있습니다. 탐색 할 때 해당 그리드 기능에 포함 된 불법 복제"
" 사건 수를 포함하는 * NUMPOINTS *라는 특성이 레이어에 포함되어 있음을 알 수 있습니다. 이 레이어의 스타일을 지정하여이 "
"정보를 더 잘 표시하십시오. ``Aggregated ''레이어를 마우스 오른쪽 버튼으로 클릭하고 `속성`을 선택하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:158
msgid ""
"Switch to the :guilabel:`Symbology` tab. Select ``Graduated`` symbology and "
"``NUMPOINTS`` as the :guilabel:`Column`. Click ``Change..`` next to "
":guilabel:`Symbol` label."
msgstr ""
"`Symbology` 탭으로 전환하십시오. `Column`으로``Graduated`` 된 ''기호와``NUMPOINTS ''를 "
"선택하십시오. `Symbol` 레이블 옆의 ``Change..``을 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:163
msgid ""
"Select :guilabel:`Simple fill` symbol and check the :guilabel:`Transparent "
"Stroke` button under :guilabel:`Stroke color`. This is to make the hexagon "
"edges transparent."
msgstr ""
"`Simple fill` 기호를 선택하고 `Stroke color`에서 `Transparent Stroke` 버튼을 확인하십시오. 이것은"
" 육각 모서리를 투명하게하기위한 것입니다."

#: ../../source/docs/3/processing_graphical_modeler.rst:168
msgid ""
"Click the dropdown next to :guilabel:`Color ramp` and select the ``Viridis``"
" ramp. Click the dropdown again and select :guilabel:`Invert Color Ramp` to "
"reverse the order of color."
msgstr ""
"`Color ramp` 옆에있는 드롭 다운을 클릭하고``Viridis ''램프를 선택하십시오. 드롭 다운을 다시 클릭하고 `색상 반전 "
"반전`을 선택하여 색상 순서를 반대로 바꿉니다."

#: ../../source/docs/3/processing_graphical_modeler.rst:173
msgid ""
"The Graduated symbology will divide the values in the selected column into "
"distinct classes and assign a different color to each of the classes. Select"
" ``Natural Breaks (Jenks)`` as the :guilabel:`Mode` and click "
":guilabel:`Classify` and click :guilabel:`OK`."
msgstr ""
"점진적 기호는 선택한 열의 값을 개별 클래스로 나누고 각 클래스에 다른 색상을 지정합니다. `Mode`로``Natural Breaks "
"(Jenks)``를 선택하고 `Classify`를 클릭하고 `OK`를 클릭하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:175
msgid ""
"see :doc:`../basic_vector_styling` for a detailed explanation of different "
"modes."
msgstr "다른 모드에 대한 자세한 설명은 : doc :`../ basic_vector_styling`을 참조하십시오."

#: ../../source/docs/3/processing_graphical_modeler.rst:180
msgid ""
"Back in the main QGIS window, turn off the ``ASAM_events`` layer. You will "
"see a nice visualization of piracy hotspots across the globe."
msgstr ""
"메인 QGIS 창으로 돌아가서``ASAM_events ''레이어를 끕니다. 전세계의 불법   해적행위 핫스팟을 멋지게 시각화 할 수 "
"있습니다."

#: ../../source/docs/3/processing_graphical_modeler.rst:186
msgid ""
"Now that you have encoded the full data pipeline in the model, it is easy to"
" reproduce your results. A model also allows you to experiment quickly "
"without manually repeating each intermediate step every time. If your inputs"
" change over time, say an updated database of piracy is released after a few"
" months, you can run your model on that input to generate a similar "
"visualization without having to remember each step."
msgstr ""
"모델에서 전체 데이터 파이프 라인을 인코딩 했으므로 결과를 쉽게 재현 할 수 있습니다. 모델을 사용하면 매번 각 중간 단계를 수동으로 "
"반복하지 않고도 신속하게 실험 할 수 있습니다. 시간이 지남에 따라 입력이 변경되면 몇 개월 후에 업데이트 된 불법 복제 데이터베이스가 "
"릴리스되는 경우 각 입력을 기억할 필요없이 해당 입력에서 모델을 실행하여 유사한 시각화를 생성 할 수 있습니다."
