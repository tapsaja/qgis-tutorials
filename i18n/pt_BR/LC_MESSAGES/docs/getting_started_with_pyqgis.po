# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Ujaval Gandhi
# This file is distributed under the same license as the QGIS Tutorials and Tips package.
# 
# Translators:
# Francisco Rodrigo Cunha de Sousa <rodrigofrcs@hotmail.com>, 2016
# William Bellinazo Roca <williambr_1331@hotmail.com>, 2016
# William Bellinazo Roca <williambr_1331@hotmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: QGIS Tutorials\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-28 07:24+0000\n"
"PO-Revision-Date: 2019-03-29 06:43+0000\n"
"Last-Translator: Ujaval Gandhi <ujaval@spatialthoughts.com>\n"
"Language-Team: Portuguese (Brazil) (http://www.transifex.com/spatialthoughts/qgis-tutorials/language/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../source/docs/getting_started_with_pyqgis.rst:2
msgid "Getting Started With Python Programming"
msgstr "Começando a Programar com o Phyton"

#: ../../source/docs/getting_started_with_pyqgis.rst:5
msgid ""
"A new version of this tutorial is available at "
":doc:`3/getting_started_with_pyqgis`"
msgstr ""

#: ../../source/docs/getting_started_with_pyqgis.rst:7
msgid ""
"QGIS has a powerful programming interface that allows you to extend the core"
" functionality of the software as well as write scripts to automate your "
"tasks. QGIS supports the popular Python scripting language. Even if you are "
"a beginner, learning a little bit of Python and QGIS programming interface "
"will allow you to be much more productive in your work. This tutorial "
"assumes no prior programming knowledge and is intended to give an "
"introduction to python scripting in QGIS (PyQGIS)."
msgstr "O QGIS tem uma interface de programação poderosa que lhe permite estender a funcionalidade principal do software, bem como escrever scripts para automatizar suas tarefas. O QGIS suporta a linguagem de script Python popular. Mesmo se você for um novato, aprender um pouco da interface de programação Python e QGIS lhe permitirá ser muito mais produtivo no seu trabalho. Este tutorial não assume qualquer conhecimento prévio de programação e destina-se a dar uma introdução à criação de scripts python em QGIS (PyQGIS)."

#: ../../source/docs/getting_started_with_pyqgis.rst:17
msgid "Overview of the task"
msgstr "Visão geral da tarefa"

#: ../../source/docs/getting_started_with_pyqgis.rst:19
msgid ""
"We will load a vector point layer representing all major airports and use "
"python scripting to create a text file with the airport name, airport code, "
"latitude and longitude for each of the airport in the layer."
msgstr "Vamos carregar uma camada vetorial de pontos que representa todos os principais aeroportos e usar o python scripting para criar um arquivo de texto com o nome do aeroporto, código do aeroporto, latitude e longitude para cada um aeroporto na camada."

#: ../../source/docs/getting_started_with_pyqgis.rst:24
msgid "Get the data"
msgstr "Obter os dados"

#: ../../source/docs/getting_started_with_pyqgis.rst:26
msgid ""
"We will use the `Airports <http://www.naturalearthdata.com/downloads/10m-"
"cultural-vectors/airports/>`_ dataset from Natural Earth."
msgstr "Usaremos os `Aeroportos <http://www.naturalearthdata.com/downloads/10m-cultural-vectors/airports/>`_ do conjunto de dados da Natural Earth."

#: ../../source/docs/getting_started_with_pyqgis.rst:30
msgid ""
"Download the `Airports shapefile "
"<http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_airports.zip>`_."
msgstr "Baixe o  `Airports shapefile <http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_airports.zip>`_."

#: ../../source/docs/getting_started_with_pyqgis.rst:33
msgid "Data Source [NATURALEARTH]_"
msgstr "Fonte de dados [NATURALEARTH]_"

#: ../../source/docs/getting_started_with_pyqgis.rst:36
msgid "Procedure"
msgstr "Procedimento"

#: ../../source/docs/getting_started_with_pyqgis.rst:38
msgid ""
"In QGIS, go to :menuselection:`Layers --> Add Vector Layer`. Browse to the "
"downloaded ``ne_10m_airports.zip`` file and click :guilabel:`Open`. Select "
"the ``ne_10m_airports.shp`` layer and click :guilabel:`OK`."
msgstr "No QGIS, acesse :menuselection:`Layers --> Add Vector Layer`. Navegue até o arquivo ``ne_10m_airports.zip` baixado e clique em  :guilabel:`Open`. Selecione a camada ``ne_10m_airports.shp`` e clique em :guilabel:`OK`."

#: ../../source/docs/getting_started_with_pyqgis.rst:45
msgid "You will see the ``ne_10m_airports`` layer loaded in QGIS."
msgstr "Você vai ver a camada ``ne_10m_airports`` carregada no QGIS."

#: ../../source/docs/getting_started_with_pyqgis.rst:50
msgid ""
"Select the :guilabel:`Identify` tool and click on any of the points to "
"examine the available attributes. You will see that the name of the airport "
"and it's 3 digit code are contained in the attributes ``name`` and "
"``iata_code`` respectively."
msgstr "Selecione a ferramenta :guilabel:`Identify` e clique em qualquer um dos pontos para examinar os atributos disponíveis. Você vai ver que o nome do aeroporto, tem 3 algarismos e estão contidas nos atributos ``name``e ``iata_code`` respectivamente."

#: ../../source/docs/getting_started_with_pyqgis.rst:58
msgid ""
"QGIS provides a built-in console where you can type python commands and get "
"the result. This console is a great way to learn scripting and also to do "
"quick data processing. Open the :guilabel:`Python Console` by going to "
":menuselection:`Plugins --> Python Console`."
msgstr "QGIS fornece um console built-in onde você pode digitar comandos Python e obter o resultado. Este console é uma ótima maneira de aprender scripting e também para fazer o processamento de dados rápidamente. Abra o :guilabel:`Python Console` atraves do :menuselection:`Plugins --> Python Console`."

#: ../../source/docs/getting_started_with_pyqgis.rst:66
msgid ""
"You will see a new panel open at the bottom of QGIS canvas. You will see a "
"prompt like ``>>>`` at the bottom where you can type commands. For "
"interacting with the QGIS environment, we must use the ``iface`` variable. "
"To access the currently active layer in QGIS, you can type the following and"
" press :kbd:`Enter`. This command fetches the reference to the currently "
"loaded layer and stores it in the ``layer`` variable."
msgstr "Você verá um novo painel aberto na parte inferior do QGIS. Você verá um prompt como ``>>>`` na parte inferior onde você pode digitar comandos. Para interagir com o ambiente QGIS, devemos usar avariável  ``iface``. Para acessar a camada ativa no momento no QGIS, você pode digitar o seguinte e pressione :kbd:`Enter`. Este comando obtém a referência para a camada atualmente carregada e armazena na variável ``layer``."

#: ../../source/docs/getting_started_with_pyqgis.rst:80
msgid ""
"There is a handy function called ``dir()`` in python that shows you all "
"available methods for any object. This is useful when you are not sure what "
"functions are available for the object. Run the following command to see "
"what operations we can do on the ``layer`` variable."
msgstr "Há uma função útil chamada ``dir()`` no python que mostra todos os métodos disponíveis para qualquer objeto. Isso é útil quando você não tem certeza do quais funções estão disponíveis para o objeto. Execute o seguinte comando para ver quais as operações que podemos fazer sobre a variável ``layer``."

#: ../../source/docs/getting_started_with_pyqgis.rst:92
msgid ""
"You will see a long list of available functions. For now, we will use a "
"function called ``getFeatures()`` which will gets you the reference to all "
"features of a layer. In our case, each feature will be a point representing "
"an airport. You can type the following command to iterate through each of "
"the features in the current layer. Make sure to add 2 spaces before typing "
"the second line."
msgstr "Você verá uma longa lista de funções disponíveis. Por agora, vamos usar uma função chamada ``getFeatures()`` que recebe a referência a todas as características de uma camada. No nosso caso, cada recurso será um ponto que representa um aeroporto. Você pode digitar o seguinte comando para percorrer cada um dos recursos na camada atual. Certifique-se de adicionar 2 espaços antes de digitar a segunda linha."

#: ../../source/docs/getting_started_with_pyqgis.rst:107
msgid ""
"As you will see in the output, each line contains a reference to a feature "
"within the layer. The reference to the feature is stored in the ``f`` "
"variable. We can use the ``f`` variable to access the attributes of each "
"feature. Type the following to print the ``name`` and ``iata_code`` for each"
" airport feature."
msgstr "Como você verá na saída, cada linha contém uma referência a um recurso dentro da camada. A referência ao recurso é armazenada na variável ``f``. Podemos usar a variável ``f`` para acessar os atributos de cada recurso. Digite o seguinte para imprimir o ``iata_code`` e o ``name``  para cada recurso aeroporto."

#: ../../source/docs/getting_started_with_pyqgis.rst:121
msgid ""
"So now you know how to programatically access the attribute of each feature "
"in a layer. Now, let's see how we can access the coordinates of the feature."
" The coordinates of a vector feature can be accessed by calling the "
"``geometry()`` function. This function returns a geometry object that we can"
" store in the variable ``geom``. You can run ``asPoint()`` function on the "
"geometry object to get the x and y coordinates of the point. If your feature"
" is a line or a polygon, you can use ``asPolyline()`` or ``asPolygon()`` "
"functions. Type the following code at the prompt and press :kbd:`Enter` to "
"see the x and y coordinates of each feature."
msgstr "Então agora você sabe como acessar programaticamente o atributo de cada recurso em uma camada. Agora, vamos ver como podemos acessar as coordenadas do recurso. As coordenadas de um recurso vetorial podem ser acessadas chamando a função  ``geometry()``. Esta função retorna um objeto de geometria que pode armazenar na variável ``geom``. Você pode executar a função ``asPoint()`` no objeto de geometria para obter as  coordenadas x e y do ponto. Se o recurso é uma linha ou um polígono, você pode usar as funções ``asPolyline()`` ou ``asPolygon()`` . Digite o seguinte código e pressione :KBD:`Enter` para ver a coordenadas x e y de cada recurso."

#: ../../source/docs/getting_started_with_pyqgis.rst:140
msgid ""
"What if we wanted to get only the ``x`` cordinate of the feature? You can "
"call the ``x()`` function on the point object and get its x coordinate."
msgstr "O que se poderia fazer para obter apenas a coordenada ``x`` do recurso? Você pode chamar os função ``x()`` sobre o objeto de ponto e obter sua coordenada x."

#: ../../source/docs/getting_started_with_pyqgis.rst:152
msgid ""
"Now we have all the pieces that we can stitch together to generate our "
"desired output. Type the following code to print the name, iata_code, "
"latitude and longitude of each of the airport features. The ``%s`` and "
"``%f`` notations are ways to format a string and number variables."
msgstr "Agora temos todas as peças que possamos unir para gerar a saída desejada. Digite o seguinte código para imprimir o nome, iata_code, latitude e longitude de cada uma das características do aeroporto. O ``%s`` e ``%f`` são maneiras de formatar uma string e número de variáveis."

#: ../../source/docs/getting_started_with_pyqgis.rst:167
msgid ""
"You can see the output printed on the console. A more useful way to store "
"the output would be in a file. You can type the following code to create a "
"file and write the output there. Replace the file path with a path on your "
"own system. Note that we add ``\\n`` at the end of our line formatting. This"
" is to add a newline after we add the data for each feature. You should also"
" note the ``unicode_line = line.encode('utf-8')`` line. Since our layer "
"contains some features with unicode characters, we can't simply write it to "
"a text file. We encode the text using the UTF-8 encoding and then write to "
"the text file."
msgstr "Você pode ver a saída impressa no console. Uma maneira mais útil para armazenar a saída seria em um arquivo. Você pode digitar o seguinte código para criar um arquivo e escrever a saída nele. Substitua o caminho do arquivo com um caminho em seu próprio sistema. Note que nós adicionamos ``\\n`` no final da nossa formatação de linha. Este vai adicionar uma nova linha depois de adicionar os dados para cada recurso. Você também deve observar a linha ``unicode_line = line.encode ('utf-8')``. Desde a nossa camada contém algumas características com caracteres Unicode, não podemos simplesmente escrevê-lo para um arquivo de texto. Nós precisamos codificar o texto usando a codificação UTF-8 e, em seguida, escrever para o arquivo de texto."

#: ../../source/docs/getting_started_with_pyqgis.rst:191
msgid ""
"You can go to the output file location you specified and open the text file."
" You will see the data from the airports shapefile that we extracted using "
"python scripting."
msgstr "Você pode ir para o local do arquivo de saída especificado e abrir o arquivo de texto. Você vai ver os dados do shapefile aeroportos que extraímos usando python scripting."
