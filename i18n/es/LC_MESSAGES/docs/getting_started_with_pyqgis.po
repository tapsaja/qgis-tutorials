# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Ujaval Gandhi
# This file is distributed under the same license as the QGIS Tutorials and Tips package.
# 
# Translators:
# Fran Raga <FRANKA1986@gmail.com>, 2017
# Krotalo25 <krotalo25@gmail.com>, 2020
# YoViajo, 2020
msgid ""
msgstr ""
"Project-Id-Version: QGIS Tutorials\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-28 07:24+0000\n"
"PO-Revision-Date: 2020-03-29 19:46+0000\n"
"Last-Translator: Krotalo25 <krotalo25@gmail.com>\n"
"Language-Team: Spanish (http://www.transifex.com/spatialthoughts/qgis-tutorials/language/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../source/docs/getting_started_with_pyqgis.rst:2
msgid "Getting Started With Python Programming"
msgstr "Iniciándote con la Programación Python"

#: ../../source/docs/getting_started_with_pyqgis.rst:5
msgid ""
"A new version of this tutorial is available at "
":doc:`3/getting_started_with_pyqgis`"
msgstr "Una nueva versión de este tutorial esta disponible en :doc:`3/getting_started_with_pyqgis`"

#: ../../source/docs/getting_started_with_pyqgis.rst:7
msgid ""
"QGIS has a powerful programming interface that allows you to extend the core"
" functionality of the software as well as write scripts to automate your "
"tasks. QGIS supports the popular Python scripting language. Even if you are "
"a beginner, learning a little bit of Python and QGIS programming interface "
"will allow you to be much more productive in your work. This tutorial "
"assumes no prior programming knowledge and is intended to give an "
"introduction to python scripting in QGIS (PyQGIS)."
msgstr "QGIS tiene una potente interfaz de programación que le permite ampliar la funcionalidad central del software, así como escribir códigos para automatizar sus tareas. QGIS es compatible con el popular lenguaje de código, Python. Incluso si eres un principiante, aprender un poco de la interfaz de programación Python y QGIS le permitirá ser mucho más productivo en su trabajo. Este tutorial no asume ningún conocimiento previo de programación y está destinado a dar una introducción a las secuencias de comando de Python en QGIS (PyQGIS)."

#: ../../source/docs/getting_started_with_pyqgis.rst:17
msgid "Overview of the task"
msgstr "Vista general de la tarea"

#: ../../source/docs/getting_started_with_pyqgis.rst:19
msgid ""
"We will load a vector point layer representing all major airports and use "
"python scripting to create a text file with the airport name, airport code, "
"latitude and longitude for each of the airport in the layer."
msgstr "Cargaremos una capa de puntos vectoriales que represente todos los aeropuertos principales y utilizaremos secuencias de comando de Python para crear un archivo de texto con el nombre del aeropuerto, el código del aeropuerto, la latitud y la longitud de cada uno de los aeropuertos de la capa."

#: ../../source/docs/getting_started_with_pyqgis.rst:24
msgid "Get the data"
msgstr "Obtener los datos"

#: ../../source/docs/getting_started_with_pyqgis.rst:26
msgid ""
"We will use the `Airports <http://www.naturalearthdata.com/downloads/10m-"
"cultural-vectors/airports/>`_ dataset from Natural Earth."
msgstr "Usaremos el conjunto de datos `Aeropuertos de Natural Earth <http://www.naturalearthdata.com/downloads/10m-cultural-vectors/airports/>`_ ."

#: ../../source/docs/getting_started_with_pyqgis.rst:30
msgid ""
"Download the `Airports shapefile "
"<http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_airports.zip>`_."
msgstr "Descarga el `archivo shape Aeropuertos <http://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_airports.zip>`_."

#: ../../source/docs/getting_started_with_pyqgis.rst:33
msgid "Data Source [NATURALEARTH]_"
msgstr "Fuente de Datos [NATURALEARTH]_"

#: ../../source/docs/getting_started_with_pyqgis.rst:36
msgid "Procedure"
msgstr "Procedmiento"

#: ../../source/docs/getting_started_with_pyqgis.rst:38
msgid ""
"In QGIS, go to :menuselection:`Layers --> Add Vector Layer`. Browse to the "
"downloaded ``ne_10m_airports.zip`` file and click :guilabel:`Open`. Select "
"the ``ne_10m_airports.shp`` layer and click :guilabel:`OK`."
msgstr "En QGIS, ve a :menuselection:`Capas --> Agregar Capa Vectorial`. Navega al archivo descargado ``ne_10m_airports.zip`` y clic :guilabel:`Abrir`. Selecciona la capa ``ne_10m_airports.shp`` y clic :guilabel:`Aceptar`."

#: ../../source/docs/getting_started_with_pyqgis.rst:45
msgid "You will see the ``ne_10m_airports`` layer loaded in QGIS."
msgstr "Verás la capa ``ne_10m_airports`` cargada en QGIS."

#: ../../source/docs/getting_started_with_pyqgis.rst:50
msgid ""
"Select the :guilabel:`Identify` tool and click on any of the points to "
"examine the available attributes. You will see that the name of the airport "
"and it's 3 digit code are contained in the attributes ``name`` and "
"``iata_code`` respectively."
msgstr "Selecciona la herramienta :guilabel:`Identificar` y clic sobre cualquiera de los puntos para examinar los atributos disponibles. Verás que el nombre del aeropuerto y su código de 3 dígitos están contenidos en los atributos ``name`` y ``iata_code`` respectivamente."

#: ../../source/docs/getting_started_with_pyqgis.rst:58
msgid ""
"QGIS provides a built-in console where you can type python commands and get "
"the result. This console is a great way to learn scripting and also to do "
"quick data processing. Open the :guilabel:`Python Console` by going to "
":menuselection:`Plugins --> Python Console`."
msgstr "QGIS provee una consola incorporada donde puedes escribir comandos python y obtener el resultado. Esta consola es una forma grandiosa para aprender script y también hacer un procesamiento rápido de datos. Abre :guilabel:`Consola de Python` yendo a :menuselection:`Complementos --> Consola de Python`."

#: ../../source/docs/getting_started_with_pyqgis.rst:66
msgid ""
"You will see a new panel open at the bottom of QGIS canvas. You will see a "
"prompt like ``>>>`` at the bottom where you can type commands. For "
"interacting with the QGIS environment, we must use the ``iface`` variable. "
"To access the currently active layer in QGIS, you can type the following and"
" press :kbd:`Enter`. This command fetches the reference to the currently "
"loaded layer and stores it in the ``layer`` variable."
msgstr "Verá un nuevo panel abierto en la parte inferior del lienzo de QGIS. Verá un mensaje como \" >>> \" en la parte inferior donde puede escribir comandos. Para interactuar con el entorno QGIS, debemos usar la variable \"iface\". Para acceder a la capa actualmente activa en QGIS, puede escribir lo siguiente y presionar: kbd: 'Enter'. Este comando obtiene la referencia a la capa cargada actualmente y la almacena en la variable \"layer ''."

#: ../../source/docs/getting_started_with_pyqgis.rst:80
msgid ""
"There is a handy function called ``dir()`` in python that shows you all "
"available methods for any object. This is useful when you are not sure what "
"functions are available for the object. Run the following command to see "
"what operations we can do on the ``layer`` variable."
msgstr "Hay una función práctica llamada ``dir()`` en python que te muestra todos los métodos disponibles para cualquier objeto. Esto es útil cuando no estás seguro que funciones están disponibles para el objeto. Ejecuta el siguiente comando para ver que operaciones podemos hacer en la variable ``layer``."

#: ../../source/docs/getting_started_with_pyqgis.rst:92
msgid ""
"You will see a long list of available functions. For now, we will use a "
"function called ``getFeatures()`` which will gets you the reference to all "
"features of a layer. In our case, each feature will be a point representing "
"an airport. You can type the following command to iterate through each of "
"the features in the current layer. Make sure to add 2 spaces before typing "
"the second line."
msgstr "Verás una lista larga de funciones disponibles. Por ahora, usaremos una función llamada ``getFeatures()`` que te conseguirá la referencia de todos los elementos de una capa. En nuestro caso, cada elemento será un punto representando un aeropuerto. Puedes escribir el siguiente comando para iterar a través de cada uno de los elementos en la capa actual. Asegúrate de agregar 2 espacios antes de escribir la segunda línea."

#: ../../source/docs/getting_started_with_pyqgis.rst:107
msgid ""
"As you will see in the output, each line contains a reference to a feature "
"within the layer. The reference to the feature is stored in the ``f`` "
"variable. We can use the ``f`` variable to access the attributes of each "
"feature. Type the following to print the ``name`` and ``iata_code`` for each"
" airport feature."
msgstr "Como verás en la salida, cada línea contiene una referencia a un elementos dentro de la capa. La referencia al elemento está almacenada en la variable ``f``. Podemos usar la variable ``f`` para acceder a los atributos de cada elemento. Escribe los siguiente para imprimir el ``name`` y ``iata_code`` para cada elemento aeropuerto."

#: ../../source/docs/getting_started_with_pyqgis.rst:121
msgid ""
"So now you know how to programatically access the attribute of each feature "
"in a layer. Now, let's see how we can access the coordinates of the feature."
" The coordinates of a vector feature can be accessed by calling the "
"``geometry()`` function. This function returns a geometry object that we can"
" store in the variable ``geom``. You can run ``asPoint()`` function on the "
"geometry object to get the x and y coordinates of the point. If your feature"
" is a line or a polygon, you can use ``asPolyline()`` or ``asPolygon()`` "
"functions. Type the following code at the prompt and press :kbd:`Enter` to "
"see the x and y coordinates of each feature."
msgstr "Entonces, ahora sabe cómo acceder programáticamente al atributo de cada entidad en una capa. Ahora, veamos cómo podemos acceder a las coordenadas de la característica. Se puede acceder a las coordenadas de una entidad vectorial llamando a la función \"geometry ()\". Esta función devuelve un objeto de geometría que podemos almacenar en la variable \"geom\". Puede ejecutar la función \"asPoint ()\" en el objeto de geometría para obtener las coordenadas x e y del punto. Si su entidad es una línea o un polígono, puede usar las funciones \"asPolyline ()\" o \"asPolygon ()\". Escriba el siguiente código en el indicador y presione: kbd: 'Enter' para ver las coordenadas x e y de cada función."

#: ../../source/docs/getting_started_with_pyqgis.rst:140
msgid ""
"What if we wanted to get only the ``x`` cordinate of the feature? You can "
"call the ``x()`` function on the point object and get its x coordinate."
msgstr "Y si quisieras obtener sólo la coordenadas ``x`` del elemento? Puedes llamar a la función ``x()`` sobre el objeto pnto y obtener su coordenada x."

#: ../../source/docs/getting_started_with_pyqgis.rst:152
msgid ""
"Now we have all the pieces that we can stitch together to generate our "
"desired output. Type the following code to print the name, iata_code, "
"latitude and longitude of each of the airport features. The ``%s`` and "
"``%f`` notations are ways to format a string and number variables."
msgstr "Ahora tenemos todas las piezas que podemos unir para generar el resultado deseado. Escriba el siguiente código para imprimir el nombre, iata_code, latitud y longitud de cada una de las características del aeropuerto. Las anotaciones \"%s\" y \"%f\" son formas de formatear una cadena y variables numéricas."

#: ../../source/docs/getting_started_with_pyqgis.rst:167
msgid ""
"You can see the output printed on the console. A more useful way to store "
"the output would be in a file. You can type the following code to create a "
"file and write the output there. Replace the file path with a path on your "
"own system. Note that we add ``\\n`` at the end of our line formatting. This"
" is to add a newline after we add the data for each feature. You should also"
" note the ``unicode_line = line.encode('utf-8')`` line. Since our layer "
"contains some features with unicode characters, we can't simply write it to "
"a text file. We encode the text using the UTF-8 encoding and then write to "
"the text file."
msgstr "Puede ver la salida impresa en la consola. Una forma más útil de almacenar la salida sería en un archivo. Puede escribir el siguiente código para crear un archivo y escribir la salida allí. Reemplace la ruta del archivo con una ruta en su propio sistema. Tenga en cuenta que agregamos `` \\ n`` al final de nuestro formato de línea. Esto es para agregar una nueva línea después de agregar los datos para cada característica. También debe tener en cuenta la línea `` unicode_line = line.encode ('utf-8') ``. Dado que nuestra capa contiene algunas características con caracteres Unicode, no podemos simplemente escribirla en un archivo de texto. Codificamos el texto usando la codificación UTF-8 y luego escribimos en el archivo de texto."

#: ../../source/docs/getting_started_with_pyqgis.rst:191
msgid ""
"You can go to the output file location you specified and open the text file."
" You will see the data from the airports shapefile that we extracted using "
"python scripting."
msgstr "Puedes ir a la ubicación del archivo de salida que especificaste y abrir el archivo texto. Verás los datos del archivo shape de aeropuertos que extraímos usando script python."
