# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Ujaval Gandhi
# This file is distributed under the same license as the QGIS Tutorials and Tips package.
# 
# Translators:
# Whyjay Zheng <jhsttshj@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: QGIS Tutorials\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-28 07:24+0000\n"
"PO-Revision-Date: 2017-09-22 16:07+0000\n"
"Last-Translator: Whyjay Zheng <jhsttshj@gmail.com>\n"
"Language-Team: Chinese (Taiwan) (http://www.transifex.com/spatialthoughts/qgis-tutorials/language/zh_TW/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_TW\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../source/docs/performing_table_joins_pyqgis.rst:2
msgid "Performing Table Joins (PyQGIS)"
msgstr "資料表連接 (PyQGIS)"

#: ../../source/docs/performing_table_joins_pyqgis.rst:3
msgid ""
"This tutorial shows how to use Python scripting in QGIS (PyQGIS) to perform "
"a table join and apply a graduated style to the resulting layer. This "
"tutorial replicates the steps of the :doc:`performing_table_joins` tutorial "
"using only python scripting."
msgstr "本教學示範如何在 QGIS 中利用 Python 腳本 (PyQGIS) 操作資料表連接，並為輸出的圖層進行漸層樣式設定。我們要重複一次在 :doc:`performing_table_joins` 中進行的步驟，但這一次會只使用 python 腳本來操作。"

#: ../../source/docs/performing_table_joins_pyqgis.rst:9
msgid "Overview of the task"
msgstr "內容說明"

#: ../../source/docs/performing_table_joins_pyqgis.rst:11
msgid ""
"Please refer to :doc:`performing_table_joins` tutorial for the overview."
msgstr "請參考 :doc:`performing_table_joins` 的教學說明。"

#: ../../source/docs/performing_table_joins_pyqgis.rst:14
msgid "Other skills you will learn"
msgstr "你還會學到這些"

#: ../../source/docs/performing_table_joins_pyqgis.rst:15
msgid "Loading zipped layers in QGIS via Python."
msgstr "利用 Python 載入壓縮的圖層到 QGIS 中"

#: ../../source/docs/performing_table_joins_pyqgis.rst:16
msgid ""
"Using QgsGraduatedSymbolRendererV2 to apply a graduated style to a vector "
"layer."
msgstr "使用 QgsGraduatedSymbolRendererV2 為向量圖層設定漸層樣式"

#: ../../source/docs/performing_table_joins_pyqgis.rst:20
msgid "Get the data"
msgstr "取得資料"

#: ../../source/docs/performing_table_joins_pyqgis.rst:21
msgid "Download the following files to your computer."
msgstr "請下載以下資料至電腦中："

#: ../../source/docs/performing_table_joins_pyqgis.rst:23
msgid ""
"`tl_2013_06_tract.zip "
"<http://www.qgistutorials.com/downloads/tl_2013_06_tract.zip>`_"
msgstr "`tl_2013_06_tract.zip <http://www.qgistutorials.com/downloads/tl_2013_06_tract.zip>`_"

#: ../../source/docs/performing_table_joins_pyqgis.rst:25
msgid ""
"`ca_tracts_pop.csv "
"<http://www.qgistutorials.com/downloads/ca_tracts_pop.csv>`_"
msgstr "`ca_tracts_pop.csv <http://www.qgistutorials.com/downloads/ca_tracts_pop.csv>`_"

#: ../../source/docs/performing_table_joins_pyqgis.rst:27
msgid ""
"`ca_tracts_pop.csvt "
"<http://www.qgistutorials.com/downloads/ca_tracts_pop.csvt>`_"
msgstr "`ca_tracts_pop.csvt <http://www.qgistutorials.com/downloads/ca_tracts_pop.csvt>`_"

#: ../../source/docs/performing_table_joins_pyqgis.rst:29
msgid "Data Source [TIGER]_ [USCENSUS]_"
msgstr "資料來源 [TIGER]_ [USCENSUS]_"

#: ../../source/docs/performing_table_joins_pyqgis.rst:33
msgid "Procedure"
msgstr "操作流程"

#: ../../source/docs/performing_table_joins_pyqgis.rst:35
msgid ""
"You can type the following commands in the :guilabel:`Python Console` or the"
" built-in :guilabel:`Editor` in QGIS."
msgstr "你可以在 :guilabel:`Python 主控台` 或是 QGIS 內建的 :guilabel:`編輯器` 中輸入以下指令。"

#: ../../source/docs/performing_table_joins_pyqgis.rst:38
msgid ""
"Load the shapefile. The Census Tracts file is a zip file containing the "
"shapefile. While we can unzip it and load the shapefile, The OGR provider "
"has the ability to load the zip file directly via a Virtual Filesystem. "
"Adding ``/vsizip/`` in the path, we can access the shapefile contained in "
"the zip archive."
msgstr "第一步是載入 shapefile，我們要的檔案包含在檔名含有 tract.zip 的壓縮檔中。雖然我們可以解壓縮然後載入 shapefile，不過 OGR 提供元（provider，這裡就是 QGIS）也可以經由虛擬的檔案系統直接載入 shapefile。只要在路徑最前端加上 ``/vsizip/`` 之後，就能夠載入 zip 格式的 shapefile。"

#: ../../source/docs/performing_table_joins_pyqgis.rst:46
msgid ""
"The zip_uri would begin with ``/vsizip//`` on Linux and Mac systems. (Note "
"the extra /)"
msgstr "zip_uri 在 Linux 和 Mac 系統上的前綴是 ``/vsizip//``\\ (注意多出來的 /)"

#: ../../source/docs/performing_table_joins_pyqgis.rst:58
msgid ""
"Load the CSV file. As the CSV file doesn't contain any spatial data, we load"
" it as a table using the ``delimitedtext`` provider."
msgstr "接下來載入 CSV 檔。由於 CSV 檔不包含任何空間資訊，我們要使用 ``delimitedtext`` 做為資料提供元，載入成表格。"

#: ../../source/docs/performing_table_joins_pyqgis.rst:70
msgid ""
"Create the table join. Table joins in QGIS are performed using "
"``QgsVectorJoinInfo`` object. We need to specify the ``GEO.id2`` field from "
"the CSV layer as the :guilabel:`Join Field` and the ``GEOID`` field from the"
" shapefile layer as the :guilabel:`Target Field`. Once you run the following"
" code, the shapefile layer will have additional attributes joined from the "
"csv layer."
msgstr "開始進行資料表連接。在 QGIS 中此操作要使用 ``QgsVectorJoinInfo`` 物件，而且我們需要指定 CSV 圖層中的 ``GEO.id2`` 作為 :guilabel:`連結欄位`，以及 shapefile 圖層中的 ``GEOID`` 作為 :guilabel:`目標欄位`。執行下列程式碼後，shapefile 的圖層就會多出一個從 CSV 圖層連結過來的屬性。"

#: ../../source/docs/performing_table_joins_pyqgis.rst:78
msgid ""
"A common pitfall when using QgsVectorJoinInfo is that both the layers must "
"be loaded in the QgsMapLayerRegistry - otherwise the join would not work."
msgstr "當使用 QgsVectorJoinInfo 時，務必要確認兩個圖層都已載入至 QgsMapLayerRegistry，否則是不會有任何東西被連結的。"

#: ../../source/docs/performing_table_joins_pyqgis.rst:95
msgid ""
"An easier - and preferred way of accomplishing the same thing is via the "
"Processing Framework. You can call the algorithm "
"``qgis:joinattributestable`` and create a joined layer."
msgstr "另一個較簡單，而且也較為推薦的方法是使用「處理框架」。你可以呼叫 ``qgis:joinattributestable`` 演算法來創造連接完畢的圖層。"

#: ../../source/docs/performing_table_joins_pyqgis.rst:101
msgid ""
"We are using the ``processing.runandload()`` method to execute the algorithm"
" instead of the more common ``processing.runalg()``. Since we want to load "
"the resulting joined layer in QGIS, ``processing.runandload()`` is a better "
"choice."
msgstr "我們這邊使用的是 ``processing.runandload()`` 方法，而不是較常見的 ``processing.runalg()`` 來執行演算法，這是因為我們想要把執行的結果圖層也加到 QGIS 中，使用 ``processing.runandload()`` 是較方便的選擇。"

#: ../../source/docs/performing_table_joins_pyqgis.rst:116
msgid ""
"We will stick with the original join using ``QgsVectorJoinInfo`` for the "
"remainder of the tutorial. Now it is time to apply a graduated style to the "
"joined layer. The population field name in the joined layer is "
"``ca_tracts_pop_D001``. We will apply a graduated renderer using the "
"``QgsGraduatedSymbolRendererV2`` class in the ``Quantile`` mode. Refer to "
":doc:`performing_table_joins` for the colors and ranges that we need to use."
msgstr "在本教學剩餘的部分中，我們會繼續使用第一種利用 ``QgsVectorJoinInfo`` 的方法。接下來我們要來為連接後的圖層設定漸層樣式。在連接後的圖層中，人口的欄位是 ``ca_tracts_pop_D001``，我們要使用 ``QgsGraduatedSymbolRendererV2``，在 ``分位數`` 模式下設定漸層樣式，相關的顏色和數值範圍設定請參考 :doc:`performing_table_joins`。"

#: ../../source/docs/performing_table_joins_pyqgis.rst:179
msgid ""
"Typing the code in the Python Console is useful for small tasks, but it is "
"far easier to use the built-in :guilabel:`Editor`. You can copy the entire "
"script in the :guilabel:`Editor` and click :guilabel:`Run`. As the script "
"finishes, you would have created a table join and styled the resulting layer"
" without any manual steps."
msgstr "在 Python 主控台中直接輸入程式碼，對於執行小型的工作非常方便，不過對於以上的程式片段，使用內建的 :guilabel:`編輯器` 會容易得多。你可以複製整段程式碼然後貼上到 :guilabel:`編輯器` 中，然後按下 :guilabel:`執行`，當腳本執行完畢後，資料表連接和樣式設定就完成了，不需要多餘的手動操作。"

#: ../../source/docs/performing_table_joins_pyqgis.rst:189
msgid "Below is the full ``join_attributes.py`` file as a reference."
msgstr "以下放上完整的 ``join_attributes.py`` 檔做為參考。"
