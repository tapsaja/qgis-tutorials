# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Ujaval Gandhi
# This file is distributed under the same license as the QGIS Tutorials and Tips package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# DiGro, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: QGIS Tutorials and Tips v1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-06 15:46+0530\n"
"PO-Revision-Date: 2019-03-29 06:45+0000\n"
"Last-Translator: DiGro, 2023\n"
"Language-Team: Dutch (https://app.transifex.com/spatialthoughts/teams/7952/nl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: nl\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../source/docs/3/getting_started_with_pyqgis.rst:2
msgid "Getting Started With Python Programming (QGIS3)"
msgstr "Beginnen met programmeren in Python (QGIS3)"

#: ../../source/docs/3/getting_started_with_pyqgis.rst:4
msgid ""
"QGIS has a powerful programming interface that allows you to extend the core"
" functionality of the software as well as write scripts to automate your "
"tasks. QGIS supports the popular Python scripting language. Even if you are "
"a beginner, learning a little bit of Python and QGIS programming interface "
"will allow you to be much more productive in your work. This tutorial "
"assumes no prior programming knowledge and is intended to give an "
"introduction to python scripting in QGIS (PyQGIS)."
msgstr ""
"QGIS heeft een krachtige interface voor programmeren die u in staat stelt de"
" bron-functionaliteit van de software uit te breiden en ook om scripts te "
"schrijven om uw taken te automatiseren. QGIS ondersteunt de populaire "
"programmeertaal voor scripten Python. Zelfs als u een beginner bent, leer "
"een klein beetje Python en de interface voor programmeren van QGIS zal u in "
"staat stellen veel productiever te werk te gaan. Deze handleiding gaat er "
"van uit dat u geen eerdere kennis van programmeren heeft en is bedoeld als "
"introductie voor het scripten met Python in QGIS (PyQGIS)."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:7
msgid "Overview of the task"
msgstr "Overzicht van de taak"

#: ../../source/docs/3/getting_started_with_pyqgis.rst:9
msgid ""
"We will load a vector point layer representing all major airports and use "
"python scripting to create a text file with the airport name, airport code, "
"latitude and longitude for each of the airport in the layer."
msgstr ""
"We zullen een vectorpuntenlaag laden die alle belangrijke vliegvelden "
"weergeeft en scripts in Python gebruiken om een tekstbestand te maken met de"
" naam van het vliegveld, de code van het vliegveld en latitude en longitude "
"voor elk vliegveld op de laag."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:12
msgid "Get the data"
msgstr "De gegevens ophalen"

#: ../../source/docs/3/getting_started_with_pyqgis.rst:14
msgid ""
"We will use the `Airports "
"<http://www.naturalearthdata.com/downloads/10m-cultural-vectors/airports/>`_"
" dataset from Natural Earth."
msgstr ""
"We zullen de gegevensset `Airports "
"<http://www.naturalearthdata.com/downloads/10m-cultural-vectors/airports/>`_"
" van Natural Earth gebruiken."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:16
msgid ""
"Download the `Airports shapefile "
"<https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_airports.zip>`_."
msgstr ""
"Download het `Airports shapefile "
"<https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_airports.zip>`_."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:19
msgid "Procedure"
msgstr "Procedure"

#: ../../source/docs/3/getting_started_with_pyqgis.rst:21
msgid ""
"Locate the ``ne_10m_airports.zip`` file in the QGIS Browser and expand it. "
"Select the ``ne_10m_airports.shp`` file and drag it to the canvas."
msgstr ""
"Zoek in de QGIS Browser naar het bestand ``ne_10m_airports.zip`` en vergroot"
" het. Selecteer het bestand ``ne_10m_airports.shp`` en sleep het naar het "
"kaartvenster."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:26
msgid "You will see the ``ne_10m_airports`` layer loaded in QGIS."
msgstr "U zult de laag ``ne_10m_airports`` zien geladen in QGIS."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:32
msgid ""
"Select the  :guilabel:`Identify` tool and click on any of the points to "
"examine the available attributes. You will see that the name of the airport "
"and it's 3 digit code are contained in the attributes ``name`` and "
"``iata_code`` respectively. You can close the :guilabel:`Identify` window."
msgstr ""
"Selecteer het gereedschap :guilabel:`Objecten identificeren` en klik op één "
"van de punten om daarvan de beschikbare attributen te bekijken. U zult zien "
"dat de naam van het vliegveld en de 3-cijferige code ervan zijn opgenomen in"
" de respectievelijke attributen ``name`` en ``iata_code``. U kunt het "
"venster :guilabel:`Identificatieresultaten` sluiten."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:37
msgid ""
"QGIS provides a built-in console where you can type python commands and get "
"the result. This console is a great way to learn scripting and also to do "
"quick data processing. Open the Python Console by going to "
":menuselection:`Plugins --> Python Console`."
msgstr ""
"QGIS verschaft een ingebouwde console waar u opdrachten voor Python kunt "
"typen en de resultaten verkrijgt. Deze console is een fantastische manier om"
" te leren scripten en ook om snel gegevens te verwerken. Open de Python "
"Console door te gaan naar :menuselection:`Plug-ins --> Python Console`."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:42
msgid ""
"You will see a new panel open at the bottom of QGIS canvas. You will see a "
"prompt like ``>>>`` at the bottom where you can type commands. For "
"interacting with the QGIS environment, we must use the ``iface`` variable. "
"To access the currently active layer in QGIS, you can type the following and"
" press :kbd:`Enter`. This command fetches the reference to the currently "
"loaded layer and stores it in the ``layer`` variable."
msgstr ""
"U zult zien dat een nieuw paneel wordt geopend aan de onderzijde van het "
"kaartvenster van QGIS. U zult een prompt als ``>>>`` zien aan de onderzijde "
"waar u opdrachten kunt typen. Voor de interactie met de omgeving van QGIS, "
"moeten we de variabele ``iface`` gebruiken. U kunt het volgende typen en op "
":kbd:`Enter` drukken om toegang te krijgen tot de huidige actieve laag in "
"QGIS. Deze opdracht haalt de verwijzing naar de huidige geladen laag op en "
"slaat die op in de variabele ``layer``."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:51
msgid ""
"There is a handy function called ``dir()`` in python that shows you all "
"available methods for any object. This is useful when you are not sure what "
"functions are available for the object. Run the following command to see "
"what operations we can do on the ``layer`` variable."
msgstr ""
"Er bestaat een handige functie, genaamd ``dir()``, in Python die u alle "
"beschikbare methoden voor een object laat zien. Dat is handig als u niet "
"precies weet welke functies beschikbaar zijn voor het object. Voer de "
"volgende opdracht uit om te zien welke bewerkingen we kunnen doen met de "
"variabele ``layer``."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:61
msgid ""
"You will see a long list of available functions. For now, we will use a "
"function called ``getFeatures()`` which will gets you the reference to all "
"features of a layer. In our case, each feature will be a point representing "
"an airport. You can type the following command to iterate through each of "
"the features in the current layer."
msgstr ""
"U zult een lange lijst met beschikbare functies zien. Voor nu zullen we de "
"functie, genaamd ``getFeatures()``, gebruiken wat u een verwijzing zal geven"
" naar alle objecten van een laag. In ons geval zal elk object een punt zijn "
"dat een vliegveld weergeeft. U kunt de volgende opdracht typen om door elk "
"van de objecten op de huidige laag te gaan."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:65
msgid ""
"Indentation (or number of spaces before each statement) is very important in"
" Python. If you get error in this step, make sure you have added 2 spaces "
"before typing the second line."
msgstr ""
"Inspringen (of een aantal spaties vóór elke argument) is heel belangrijk in "
"Python. Als u een fout krijgt in deze stap, zorg er dan voor dat u 2 spaties"
" hebt toegevoegd vóórdat u de tweede regel begon te typen."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:67
msgid ""
"As the print(f) statement is inside a for-loop, you will need to press "
":kbd:`Enter` twice after that statement - once to exit the loop - and "
"another to execute the command."
msgstr ""
"Als het argument print(f) in een For-loop staat, dient u tweemaal op "
":kbd:`Enter` te drukken na dat argument - eenmaal om de loop te verlaten - "
"en nog ene keer om de opdracht uit te voeren."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:77
msgid ""
"As you will see in the output, each line contains a reference to a feature "
"within the layer. The reference to the feature is stored in the ``f`` "
"variable. We can use the ``f`` variable to access the attributes of each "
"feature. Type the following to print the ``name`` and ``iata_code`` for each"
" airport feature."
msgstr ""
"Zoals u in de uitvoer zult zien, bevat elke regel een verwijzing naar een "
"object op de laag. De verwijzing naar het object wordt opgeslagen in de "
"variabele ``f``. We kunnen de variabele ``f`` gebruiken om toegang te "
"krijgen tot de attributen van elk object. Typ het volgende om de ``name`` en"
" ``iata_code`` voor elk object vliegveld af te drukken."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:88
msgid ""
"So now you know how to programatically access the attribute of each feature "
"in a layer. Let's see how we can access the coordinates of the feature. The "
"coordinates of a vector feature can be accessed by calling the "
"``geometry()`` function. This function returns a geometry object that we can"
" store in the variable ``geom``. You can run ``asPoint()`` function on the "
"geometry object to get the x and y coordinates of the point. If your feature"
" is a line or a polygon, you can use ``asPolyline()`` or ``asPolygon()`` "
"functions. Type the following code at the prompt and press :kbd:`Enter` to "
"see the x and y coordinates of each feature."
msgstr ""
"U weet dus nu hoe u programmatisch toegang kunt krijgen tot de attributen "
"van elk object op een laag. Laten we eens zien hoe we toegang krijgen tot de"
" coördinaten van het object. Toegang tot de coördinaten van het vectorobject"
" kan worden verkregen door de functie ``geometry()`` aan te roepen. Deze "
"functie geeft een object geometrie terug die we kunnen opslaan in de "
"variabele ``geom``. U kunt de functie ``asPoint()`` op de object geometrie "
"uitvoeren om de X- en Y-coördinaten van het punt te verkrijgen. Als uw "
"object een lijn of polygoon is, kunt u de functies ``asPolyline()`` of "
"``asPolygon()`` gebruiken. Typ de volgende code bij de prompt en druk op "
":kbd:`Enter` om de X- en Y-coördinaten van elk object te bekijken."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:99
msgid ""
"What if we wanted to get only the ``x`` cordinate of the feature? You can "
"call the ``x()`` function on the point object and get its x coordinate."
msgstr ""
"Wat als we alleen het ``X``-coördinaat van het object wilden? U kunt de "
"functie ``x()`` aanroepen voor het object punt en daarvan het X-coördinaat "
"verkrijgen."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:110
msgid ""
"Now we have all the pieces that we can stitch together to generate our "
"desired output. Type the following code to print the name, iata_code, "
"latitude and longitude of each of the airport features. Here we are using "
"the ``.format()`` method which gives more control on printing multiple "
"variables. The ``.2f`` notation is to limit the coordinates to 2 decimals."
msgstr ""
"Nu hebben we alle stukjes die we aan elkaar kunnen naaien om de door ons "
"gewenste uitvoer te verkrijgen. Typ de volgende code om de naam, iata_code, "
"latitude en longitude van alle objecten vliegveld af te drukken. Hier "
"gebruiken we de methode ``.format()`` die meer controle geeft voor het "
"afdrukken van meerdere variabelen. De notatie ``.2f`` is om de coördinaten "
"te beperken tot 2 decimalen."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:121
msgid ""
"You can see the output printed on the console. A more useful way to store "
"the output would be in a file. You can type the following code to create a "
"file and write the output there. Replace the file path with a path on your "
"own system. Note that we add ``\\n`` at the end of our line formatting. This"
" is to add a newline after we add the data for each feature."
msgstr ""
"U kunt de uitvoer zien worden afgedrukt op de  console. Een meer handige "
"manier om de uitvoer op te slaan zou een bestand zijn. U kunt de volgende "
"code typen om een bestand te maken en de uitvoer daar naartoe weg te "
"schrijven. vervang het bestandspad door een bestandspad op uw eigen systeem."
" Onthoud dat we ``\\n`` toevoegen aan het einde van de opmaak van onze "
"regel. Dat is om een nieuwe regel toe te voegen na de gegevens voor elk "
"object."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:125
msgid ""
"There are 2 levels of code blocks below. Do make sure to add 4 spaces to the"
" code starting line 3."
msgstr ""
"Er staan 2 niveaus codeblokken hieronder. Zorg er voor dat er 4 spaties zijn"
" toegevoegd voor de code die begint op regel 3."

#: ../../source/docs/3/getting_started_with_pyqgis.rst:138
msgid ""
"You can go to the output file location you specified and open the text file."
" You will see the data from the airports shapefile that we extracted using "
"python scripting."
msgstr ""
"U kunt naar de locatie van het uitvoerbestand gaan dat u heeft "
"gespecificeerd en het tekstbestand openen. U zult de gegevens uit het "
"shapefile Airports zien die we hebben uitgenomen met scripten met Python."
