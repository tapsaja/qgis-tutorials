# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, Ujaval Gandhi
# This file is distributed under the same license as the QGIS Tutorials and Tips package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: QGIS Tutorials\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-28 07:24+0000\n"
"PO-Revision-Date: 2016-04-22 07:21+0000\n"
"Last-Translator: Ujaval Gandhi <ujaval@spatialthoughts.com>\n"
"Language-Team: Greek (http://www.transifex.com/spatialthoughts/qgis-tutorials/language/el/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: el\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../source/docs/performing_table_joins_pyqgis.rst:2
msgid "Performing Table Joins (PyQGIS)"
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:3
msgid ""
"This tutorial shows how to use Python scripting in QGIS (PyQGIS) to perform "
"a table join and apply a graduated style to the resulting layer. This "
"tutorial replicates the steps of the :doc:`performing_table_joins` tutorial "
"using only python scripting."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:9
msgid "Overview of the task"
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:11
msgid ""
"Please refer to :doc:`performing_table_joins` tutorial for the overview."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:14
msgid "Other skills you will learn"
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:15
msgid "Loading zipped layers in QGIS via Python."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:16
msgid ""
"Using QgsGraduatedSymbolRendererV2 to apply a graduated style to a vector "
"layer."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:20
msgid "Get the data"
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:21
msgid "Download the following files to your computer."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:23
msgid ""
"`tl_2013_06_tract.zip "
"<http://www.qgistutorials.com/downloads/tl_2013_06_tract.zip>`_"
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:25
msgid ""
"`ca_tracts_pop.csv "
"<http://www.qgistutorials.com/downloads/ca_tracts_pop.csv>`_"
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:27
msgid ""
"`ca_tracts_pop.csvt "
"<http://www.qgistutorials.com/downloads/ca_tracts_pop.csvt>`_"
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:29
msgid "Data Source [TIGER]_ [USCENSUS]_"
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:33
msgid "Procedure"
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:35
msgid ""
"You can type the following commands in the :guilabel:`Python Console` or the"
" built-in :guilabel:`Editor` in QGIS."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:38
msgid ""
"Load the shapefile. The Census Tracts file is a zip file containing the "
"shapefile. While we can unzip it and load the shapefile, The OGR provider "
"has the ability to load the zip file directly via a Virtual Filesystem. "
"Adding ``/vsizip/`` in the path, we can access the shapefile contained in "
"the zip archive."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:46
msgid ""
"The zip_uri would begin with ``/vsizip//`` on Linux and Mac systems. (Note "
"the extra /)"
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:58
msgid ""
"Load the CSV file. As the CSV file doesn't contain any spatial data, we load"
" it as a table using the ``delimitedtext`` provider."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:70
msgid ""
"Create the table join. Table joins in QGIS are performed using "
"``QgsVectorJoinInfo`` object. We need to specify the ``GEO.id2`` field from "
"the CSV layer as the :guilabel:`Join Field` and the ``GEOID`` field from the"
" shapefile layer as the :guilabel:`Target Field`. Once you run the following"
" code, the shapefile layer will have additional attributes joined from the "
"csv layer."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:78
msgid ""
"A common pitfall when using QgsVectorJoinInfo is that both the layers must "
"be loaded in the QgsMapLayerRegistry - otherwise the join would not work."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:95
msgid ""
"An easier - and preferred way of accomplishing the same thing is via the "
"Processing Framework. You can call the algorithm "
"``qgis:joinattributestable`` and create a joined layer."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:101
msgid ""
"We are using the ``processing.runandload()`` method to execute the algorithm"
" instead of the more common ``processing.runalg()``. Since we want to load "
"the resulting joined layer in QGIS, ``processing.runandload()`` is a better "
"choice."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:116
msgid ""
"We will stick with the original join using ``QgsVectorJoinInfo`` for the "
"remainder of the tutorial. Now it is time to apply a graduated style to the "
"joined layer. The population field name in the joined layer is "
"``ca_tracts_pop_D001``. We will apply a graduated renderer using the "
"``QgsGraduatedSymbolRendererV2`` class in the ``Quantile`` mode. Refer to "
":doc:`performing_table_joins` for the colors and ranges that we need to use."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:179
msgid ""
"Typing the code in the Python Console is useful for small tasks, but it is "
"far easier to use the built-in :guilabel:`Editor`. You can copy the entire "
"script in the :guilabel:`Editor` and click :guilabel:`Run`. As the script "
"finishes, you would have created a table join and styled the resulting layer"
" without any manual steps."
msgstr ""

#: ../../source/docs/performing_table_joins_pyqgis.rst:189
msgid "Below is the full ``join_attributes.py`` file as a reference."
msgstr ""
